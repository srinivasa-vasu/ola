node('maven') {
   // define commands
   def mvnCmd = "mvn -s configuration/cicd-settings.xml"
   def appName = "ola"
   stage 'Build'
   git branch: 'cicd', url: 'https://github.com/srinivasa-vasu/ola.git'
   def v = version()
   
   sh "${mvnCmd} clean install -DskipTests=true"

   stage 'Test and Analysis'
   parallel (
       'Test': {
           // sh "${mvnCmd} test"
           // step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
       },
       'Static Analysis': {
           sh "${mvnCmd} jacoco:report sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -DskipTests=true"
       }
   )

   stage 'Push to Nexus'
   sh "${mvnCmd} deploy -DskipTests=true"

   stage 'Deploy DEV'
   sh "rm -rf oc-build && mkdir -p oc-build/target"
   sh "cp target/*.jar oc-build/target/"
   sh "cp Dockerfile oc-build/"
   // clean up. keep the image stream
   sh "oc project dev"
   sh "oc delete bc,dc,svc,route -l app=tasks -n dev"
   // create build. override the exit code since it complains about exising imagestream
   sh "oc new-build --binary --name=${appName} -l app=${appName} -n dev || true"
   // build image
   sh "oc start-build ${appName} --from-dir=oc-build --wait=true -n dev"
   // deploy image
   sh "oc new-app ${appName} -l app=${appName},hystrix.enabled=true -n dev"
   sh "oc expose svc/${appName} -n dev"

   stage 'Deploy STAGE'
   input message: "Promote to STAGE?", ok: "Promote"
   sh "oc project stage"
   // tag for stage
   sh "oc tag dev/${appName}:latest stage/${appName}:${v}"
   // clean up. keep the imagestream
   sh "oc delete bc,dc,svc,route -l app=${appName} -n stage"
   // deploy stage image
   sh "oc new-app ${appName}:${v} -n stage"
   sh "oc expose svc/${appName} -n stage"
}

def version() {
  def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
  matcher ? matcher[0][1] : null
}
